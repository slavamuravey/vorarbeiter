{"version":3,"file":"vorarbeiter.esm.min.js","sources":["../es/index.js"],"sourcesContent":["export class ServiceContainerImpl {\n    constructor(spec) {\n        this.spec = spec;\n        this.services = new Map();\n        this.loading = new Set();\n    }\n    get(id) {\n        var _a;\n        if (!this.spec.has(id)) {\n            throw new UnknownServiceError(id);\n        }\n        return (_a = this.retrieveService(id)) !== null && _a !== void 0 ? _a : this.createService(id);\n    }\n    has(id) {\n        return this.services.has(id);\n    }\n    createService(id) {\n        if (this.loading.has(id)) {\n            throw new ServiceCircularReferenceError(id, [...this.loading.values(), id]);\n        }\n        const definition = this.spec.get(id);\n        const { factory, injector } = definition;\n        this.loading.add(id);\n        const service = typeof factory === \"function\" ? factory(this) : factory.create(this);\n        this.loading.delete(id);\n        this.storeService(id, service);\n        if (injector) {\n            typeof injector === \"function\" ? injector(service, this) : injector.inject(service, this);\n        }\n        return service;\n    }\n    storeService(id, service) {\n        const ctx = this.resolveContext(id);\n        if (!this.services.has(id)) {\n            this.services.set(id, new WeakMap());\n        }\n        this.services.get(id).set(ctx, service);\n    }\n    retrieveService(id) {\n        var _a;\n        const ctx = this.resolveContext(id);\n        return (_a = this.services.get(id)) === null || _a === void 0 ? void 0 : _a.get(ctx);\n    }\n    resolveContext(id) {\n        const definition = this.spec.get(id);\n        const { contextResolver } = definition;\n        return typeof contextResolver === \"function\" ? contextResolver(this) : contextResolver.resolveContext(this);\n    }\n}\nexport const createServiceContainer = (spec) => new ServiceContainerImpl(spec);\nexport class ServiceDefinitionBuilderImpl {\n    constructor(factory) {\n        this.factory = factory;\n        this.contextResolver = new SharedContextResolver();\n    }\n    shared() {\n        this.scoped(new SharedContextResolver());\n        return this;\n    }\n    transient() {\n        this.scoped(new TransientContextResolver());\n        return this;\n    }\n    scoped(contextResolver) {\n        this.contextResolver = contextResolver;\n        return this;\n    }\n    withInjector(injector) {\n        this.injector = injector;\n        return this;\n    }\n    getServiceDefinition() {\n        return {\n            factory: this.factory,\n            contextResolver: this.contextResolver,\n            injector: this.injector\n        };\n    }\n}\nexport class ServiceSpecBuilderImpl {\n    constructor() {\n        this.defBuilders = new Map();\n    }\n    set(id, factory) {\n        const definitionBuilder = new ServiceDefinitionBuilderImpl(factory);\n        this.defBuilders.set(id, definitionBuilder);\n        return definitionBuilder;\n    }\n    getServiceSpec() {\n        const spec = new Map();\n        this.defBuilders.forEach((definitionBuilder, id) => {\n            spec.set(id, definitionBuilder.getServiceDefinition());\n        });\n        return spec;\n    }\n}\nexport const createServiceSpecBuilder = () => new ServiceSpecBuilderImpl();\nexport class SharedContextResolver {\n    constructor() {\n        this.context = Object.create(null);\n    }\n    resolveContext(container) {\n        return this.context;\n    }\n}\nexport class TransientContextResolver {\n    resolveContext(container) {\n        return Object.create(null);\n    }\n}\nexport class UnknownServiceError extends Error {\n    constructor(id) {\n        super(`unknown service \"${String(id)}\"`);\n        this.id = id;\n        this.name = \"UnknownServiceError\";\n    }\n}\nexport class ServiceCircularReferenceError extends Error {\n    constructor(id, referenceChain) {\n        super(`circular dependency detected: ${referenceChain.map(String).join(\" -> \")}`);\n        this.id = id;\n        this.referenceChain = referenceChain;\n        this.name = \"ServiceCircularReferenceError\";\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["ServiceContainerImpl","constructor","spec","this","services","Map","loading","Set","get","id","_a","has","UnknownServiceError","retrieveService","createService","ServiceCircularReferenceError","values","definition","factory","injector","add","service","create","delete","storeService","inject","ctx","resolveContext","set","WeakMap","contextResolver","createServiceContainer","ServiceDefinitionBuilderImpl","SharedContextResolver","shared","scoped","transient","TransientContextResolver","withInjector","getServiceDefinition","ServiceSpecBuilderImpl","defBuilders","definitionBuilder","getServiceSpec","forEach","createServiceSpecBuilder","context","Object","container","Error","super","String","name","referenceChain","map","join"],"mappings":"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"}