{"version":3,"file":"vorarbeiter.esm.min.js","sources":["../es/index.js"],"sourcesContent":["export var ServiceType;\n(function (ServiceType) {\n    ServiceType[\"Shared\"] = \"shared\";\n    ServiceType[\"Transient\"] = \"transient\";\n    ServiceType[\"Scoped\"] = \"scoped\";\n})(ServiceType || (ServiceType = {}));\nexport class ServiceContainerImpl {\n    constructor(spec) {\n        this.spec = spec;\n        this.services = new Map();\n        this.loading = new Set();\n    }\n    get(id) {\n        if (!this.spec.services.has(id)) {\n            throw new UnknownServiceError(id);\n        }\n        const definition = this.spec.services.get(id);\n        // eslint-disable-next-line default-case\n        switch (definition.type.name) {\n            case ServiceType.Transient:\n                return this.resolveServiceTransient(id);\n            case ServiceType.Scoped:\n                return this.resolveServiceScoped(id);\n            case ServiceType.Shared:\n                return this.resolveServiceShared(id);\n        }\n    }\n    resolveServiceShared(id) {\n        if (this.services.has(id)) {\n            return this.services.get(id);\n        }\n        const service = this.createService(id);\n        this.services.set(id, service);\n        this.executeInjection(id, service);\n        return service;\n    }\n    resolveServiceTransient(id) {\n        const service = this.createService(id);\n        this.executeInjection(id, service);\n        return service;\n    }\n    resolveServiceScoped(id) {\n        const ctx = this.resolveContext(id);\n        if (!this.services.has(id)) {\n            this.services.set(id, new WeakMap());\n        }\n        const ctxMap = this.services.get(id);\n        if (ctxMap.has(ctx)) {\n            return ctxMap.get(ctx);\n        }\n        const service = this.createService(id);\n        ctxMap.set(ctx, service);\n        this.executeInjection(id, service);\n        return service;\n    }\n    has(id) {\n        return this.services.has(id);\n    }\n    createService(id) {\n        if (this.loading.has(id)) {\n            throw new ServiceCircularReferenceError(id, [...this.loading.values(), id]);\n        }\n        const definition = this.spec.services.get(id);\n        const { factory } = definition;\n        this.loading.add(id);\n        const service = typeof factory === \"function\" ? factory(this) : factory.create(this);\n        this.loading.delete(id);\n        return service;\n    }\n    executeInjection(id, service) {\n        const definition = this.spec.services.get(id);\n        const { injector } = definition;\n        if (!injector) {\n            return;\n        }\n        if (typeof injector === \"function\") {\n            injector(service, this);\n            return;\n        }\n        injector.inject(service, this);\n    }\n    resolveContext(id) {\n        const definition = this.spec.services.get(id);\n        const { contextResolver } = definition.type;\n        return typeof contextResolver === \"function\" ? contextResolver(this) : contextResolver.resolveContext(this);\n    }\n}\nexport const createServiceContainer = (spec) => new ServiceContainerImpl(spec);\nexport class ServiceDefinitionBuilderImpl {\n    constructor(factory) {\n        this.factory = factory;\n        this.shared();\n    }\n    shared() {\n        this.type = { name: ServiceType.Shared };\n        return this;\n    }\n    transient() {\n        this.type = { name: ServiceType.Transient };\n        return this;\n    }\n    scoped(contextResolver) {\n        this.type = { name: ServiceType.Scoped, contextResolver };\n        return this;\n    }\n    withInjector(injector) {\n        this.injector = injector;\n        return this;\n    }\n    getServiceDefinition() {\n        return {\n            type: this.type,\n            factory: this.factory,\n            injector: this.injector\n        };\n    }\n}\nexport class ServiceSpecBuilderImpl {\n    constructor() {\n        this.defBuilders = new Map();\n    }\n    set(id, factory) {\n        const definitionBuilder = new ServiceDefinitionBuilderImpl(factory);\n        this.defBuilders.set(id, definitionBuilder);\n        return definitionBuilder;\n    }\n    getServiceSpec() {\n        const services = new Map();\n        this.defBuilders.forEach((definitionBuilder, id) => {\n            services.set(id, definitionBuilder.getServiceDefinition());\n        });\n        return {\n            services\n        };\n    }\n}\nexport const createServiceSpecBuilder = () => new ServiceSpecBuilderImpl();\nexport class UnknownServiceError extends Error {\n    constructor(id) {\n        super(`unknown service \"${String(id)}\"`);\n        this.id = id;\n        this.name = \"UnknownServiceError\";\n    }\n}\nexport class ServiceCircularReferenceError extends Error {\n    constructor(id, referenceChain) {\n        super(`circular dependency detected: ${referenceChain.map(String).join(\" -> \")}`);\n        this.id = id;\n        this.referenceChain = referenceChain;\n        this.name = \"ServiceCircularReferenceError\";\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["ServiceType","ServiceContainerImpl","constructor","spec","this","services","Map","loading","Set","get","id","has","UnknownServiceError","type","name","Transient","resolveServiceTransient","Scoped","resolveServiceScoped","Shared","resolveServiceShared","service","createService","set","executeInjection","ctx","resolveContext","WeakMap","ctxMap","ServiceCircularReferenceError","values","definition","factory","add","create","delete","injector","inject","contextResolver","createServiceContainer","ServiceDefinitionBuilderImpl","shared","transient","scoped","withInjector","getServiceDefinition","ServiceSpecBuilderImpl","defBuilders","definitionBuilder","getServiceSpec","forEach","createServiceSpecBuilder","Error","super","String","referenceChain","map","join"],"mappings":"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"}