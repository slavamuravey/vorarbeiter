{"version":3,"file":"vorarbeiter.esm.min.js","sources":["../es/index.js"],"sourcesContent":["export class ServiceContainerImpl {\n    constructor(spec) {\n        this.spec = spec;\n        this.services = new Map();\n        this.loading = new Set();\n        let resolveService = this.resolveService.bind(this);\n        this.spec.middlewares.forEach(mw => {\n            resolveService = mw(resolveService);\n        });\n        this.resolveService = resolveService;\n    }\n    get(id) {\n        return this.resolveService(id);\n    }\n    resolveService(id) {\n        var _a;\n        if (!this.spec.services.has(id)) {\n            throw new UnknownServiceError(id);\n        }\n        return (_a = this.retrieveService(id)) !== null && _a !== void 0 ? _a : this.createService(id);\n    }\n    has(id) {\n        return this.services.has(id);\n    }\n    createService(id) {\n        if (this.loading.has(id)) {\n            throw new ServiceCircularReferenceError(id, [...this.loading.values(), id]);\n        }\n        const definition = this.spec.services.get(id);\n        const { factory, injector } = definition;\n        this.loading.add(id);\n        const service = typeof factory === \"function\" ? factory(this) : factory.create(this);\n        this.loading.delete(id);\n        this.storeService(id, service);\n        if (injector) {\n            typeof injector === \"function\" ? injector(service, this) : injector.inject(service, this);\n        }\n        return service;\n    }\n    storeService(id, service) {\n        const ctx = this.resolveContext(id);\n        if (!this.services.has(id)) {\n            this.services.set(id, new WeakMap());\n        }\n        this.services.get(id).set(ctx, service);\n    }\n    retrieveService(id) {\n        var _a;\n        const ctx = this.resolveContext(id);\n        return (_a = this.services.get(id)) === null || _a === void 0 ? void 0 : _a.get(ctx);\n    }\n    resolveContext(id) {\n        const definition = this.spec.services.get(id);\n        const { contextResolver } = definition;\n        return typeof contextResolver === \"function\" ? contextResolver(this) : contextResolver.resolveContext(this);\n    }\n}\nexport const createServiceContainer = (spec) => new ServiceContainerImpl(spec);\nexport class ServiceDefinitionBuilderImpl {\n    constructor(factory) {\n        this.factory = factory;\n        this.contextResolver = new SharedContextResolver();\n    }\n    shared() {\n        this.scoped(new SharedContextResolver());\n        return this;\n    }\n    transient() {\n        this.scoped(new TransientContextResolver());\n        return this;\n    }\n    scoped(contextResolver) {\n        this.contextResolver = contextResolver;\n        return this;\n    }\n    withInjector(injector) {\n        this.injector = injector;\n        return this;\n    }\n    getServiceDefinition() {\n        return {\n            factory: this.factory,\n            contextResolver: this.contextResolver,\n            injector: this.injector\n        };\n    }\n}\nexport class ServiceSpecBuilderImpl {\n    constructor() {\n        this.defBuilders = new Map();\n        this.middlewares = [];\n    }\n    set(id, factory) {\n        const definitionBuilder = new ServiceDefinitionBuilderImpl(factory);\n        this.defBuilders.set(id, definitionBuilder);\n        return definitionBuilder;\n    }\n    addMiddleware(...middlewares) {\n        this.middlewares.push(...middlewares);\n        return this;\n    }\n    getServiceSpec() {\n        const services = new Map();\n        this.defBuilders.forEach((definitionBuilder, id) => {\n            services.set(id, definitionBuilder.getServiceDefinition());\n        });\n        return {\n            services,\n            middlewares: this.middlewares\n        };\n    }\n}\nexport const createServiceSpecBuilder = () => new ServiceSpecBuilderImpl();\nexport class SharedContextResolver {\n    constructor() {\n        this.context = Object.create(null);\n    }\n    resolveContext(container) {\n        return this.context;\n    }\n}\nexport class TransientContextResolver {\n    resolveContext(container) {\n        return Object.create(null);\n    }\n}\nexport class UnknownServiceError extends Error {\n    constructor(id) {\n        super(`unknown service \"${String(id)}\"`);\n        this.id = id;\n        this.name = \"UnknownServiceError\";\n    }\n}\nexport class ServiceCircularReferenceError extends Error {\n    constructor(id, referenceChain) {\n        super(`circular dependency detected: ${referenceChain.map(String).join(\" -> \")}`);\n        this.id = id;\n        this.referenceChain = referenceChain;\n        this.name = \"ServiceCircularReferenceError\";\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["ServiceContainerImpl","constructor","spec","this","services","Map","loading","Set","resolveService","bind","middlewares","forEach","mw","get","id","_a","has","UnknownServiceError","retrieveService","createService","ServiceCircularReferenceError","values","definition","factory","injector","add","service","create","delete","storeService","inject","ctx","resolveContext","set","WeakMap","contextResolver","createServiceContainer","ServiceDefinitionBuilderImpl","SharedContextResolver","shared","scoped","transient","TransientContextResolver","withInjector","getServiceDefinition","ServiceSpecBuilderImpl","defBuilders","definitionBuilder","addMiddleware","push","getServiceSpec","createServiceSpecBuilder","context","Object","container","Error","super","String","name","referenceChain","map","join"],"mappings":"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"}